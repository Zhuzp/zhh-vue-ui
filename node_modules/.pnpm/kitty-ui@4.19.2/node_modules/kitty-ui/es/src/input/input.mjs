import { defineComponent as P, ref as u, useAttrs as E, computed as i, shallowRef as M, watch as O, nextTick as D, useSlots as H, unref as t, openBlock as a, createElementBlock as o, createElementVNode as y, mergeProps as I, normalizeClass as q, renderSlot as V, createCommentVNode as p, withDirectives as g, createVNode as d, vShow as z } from "vue";
import "./style/index.css";
import f from "../icon/index.mjs";
import { calcTextareaHeight as F } from "./utils.mjs";
import { isObject as S } from "@kitty-ui/utils";
const G = {
  key: 0,
  class: "k-textarea"
}, J = ["value"], K = {
  key: 0,
  class: "k-input__prepend"
}, L = ["disabled", "value"], Q = {
  key: 1,
  class: "k-input__append"
}, U = { class: "k-input__suffix" }, W = {
  key: 3,
  class: "k-input__prefix"
}, X = {
  key: 4,
  class: "k-input__suffix no-cursor"
}, Y = P({
  name: "k-input"
}), oe = /* @__PURE__ */ P({
  ...Y,
  props: {
    modelValue: { default: "" },
    disabled: { type: Boolean },
    size: null,
    clearable: { type: Boolean },
    showPassword: { type: Boolean },
    prefixIcon: null,
    suffixIcon: null,
    autosize: { type: [Boolean, Object] }
  },
  emits: ["update:modelValue", "change"],
  setup(C, { emit: m }) {
    const e = C, v = u(!1), x = (s) => {
      s.target.value ? v.value = !0 : v.value = !1, m("change", s.target.value), m("update:modelValue", s.target.value);
    }, l = E(), B = i(() => ({
      "is-disabled": e.disabled,
      [`k-input--${e.size}`]: e.size,
      ["k-input-group k-input-prepend"]: c.prepend,
      ["k-input-group k-input-append"]: c.append
    })), R = i(() => ({
      ["k-input--prefix"]: w.value
    })), _ = u(!0), $ = () => {
      m("update:modelValue", "");
    }, r = u();
    Promise.resolve().then(() => {
      e.showPassword && (r.value.type = "password");
    });
    const k = u("browse"), N = i(() => e.showPassword && e.modelValue && !e.clearable), T = () => {
      if (r.value.type === "password") {
        k.value = "eye-close", r.value.type = l.type || "text";
        return;
      }
      r.value.type = "password", k.value = "browse";
    }, j = i(() => e.suffixIcon && !e.clearable && !e.showPassword), w = i(() => e.prefixIcon), h = u(), b = M();
    O(() => e.modelValue, () => {
      if (l.type === "textarea" && e.autosize) {
        const s = S(e.autosize) ? e.autosize.minRows : void 0, n = S(e.autosize) ? e.autosize.maxRows : void 0;
        D(() => {
          h.value = F(b.value, s, n);
        });
      }
    }, { immediate: !0 });
    const c = H();
    return (s, n) => t(l).type === "textarea" ? (a(), o("div", G, [
      y("textarea", I({
        class: "k-textarea__inner",
        style: h.value
      }, t(l), {
        ref_key: "textarea",
        ref: b,
        value: e.modelValue,
        onInput: x
      }), null, 16, J)
    ])) : (a(), o("div", {
      key: 1,
      class: q(["k-input", t(B)]),
      onMouseenter: n[0] || (n[0] = (A) => _.value = !0),
      onMouseleave: n[1] || (n[1] = (A) => _.value = !1)
    }, [
      t(c).prepend ? (a(), o("div", K, [
        V(s.$slots, "prepend")
      ])) : p("", !0),
      y("input", I({
        ref_key: "ipt",
        ref: r,
        class: ["k-input__inner", t(R)],
        disabled: e.disabled
      }, t(l), {
        value: e.modelValue,
        onInput: x
      }), null, 16, L),
      t(c).append ? (a(), o("div", Q, [
        V(s.$slots, "append")
      ])) : p("", !0),
      e.clearable && v.value ? g((a(), o("div", {
        key: 2,
        onClick: $,
        class: "k-input__suffix"
      }, [
        d(t(f), { name: "error" })
      ], 512)), [
        [z, _.value]
      ]) : p("", !0),
      g(y("div", U, [
        d(t(f), {
          onClick: T,
          name: k.value
        }, null, 8, ["name"])
      ], 512), [
        [z, t(N)]
      ]),
      t(w) ? (a(), o("div", W, [
        d(t(f), {
          name: e.prefixIcon
        }, null, 8, ["name"])
      ])) : p("", !0),
      t(j) ? (a(), o("div", X, [
        d(t(f), {
          name: e.suffixIcon
        }, null, 8, ["name"])
      ])) : p("", !0)
    ], 34));
  }
});
export {
  oe as default
};
