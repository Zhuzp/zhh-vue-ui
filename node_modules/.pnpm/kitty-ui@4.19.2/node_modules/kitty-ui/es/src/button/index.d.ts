declare const Button: import("@kitty-ui/utils/withinstall").SFCWithInstall<import("vue").DefineComponent<{
    type: {
        type: StringConstructor;
        validator(value: string): boolean;
    };
    plain: BooleanConstructor;
    round: BooleanConstructor;
    disabled: BooleanConstructor;
    icon: StringConstructor;
    iconPosition: StringConstructor;
    size: {
        type: StringConstructor;
        validator(value: string): boolean;
    };
}, {
    styleClass: import("vue").ComputedRef<{
        [x: string]: string | boolean | undefined;
        'is-plain': boolean;
        'is-round': boolean;
        'is-disabled': boolean;
    }>;
    Icon: import("vue").DefineComponent<{
        name: {
            type: StringConstructor;
        };
        dot: {
            type: BooleanConstructor;
        };
        badge: {
            type: StringConstructor;
        };
        color: {
            type: StringConstructor;
        };
    }, {
        iconName: import("vue").ComputedRef<string>;
        styleDot: import("vue").ComputedRef<{
            "kitty-dot": boolean;
        }>;
        badge: import("vue").ComputedRef<string | undefined>;
        iconColor: import("vue").ComputedRef<{
            color: string | undefined;
        }>;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
        name: {
            type: StringConstructor;
        };
        dot: {
            type: BooleanConstructor;
        };
        badge: {
            type: StringConstructor;
        };
        color: {
            type: StringConstructor;
        };
    }>>, {
        dot: boolean;
    }>;
    iconFont: import("vue").ComputedRef<{
        iconName: string | undefined;
        position: string | undefined;
    }>;
    slots: Readonly<{
        [name: string]: import("vue").Slot | undefined;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    type: {
        type: StringConstructor;
        validator(value: string): boolean;
    };
    plain: BooleanConstructor;
    round: BooleanConstructor;
    disabled: BooleanConstructor;
    icon: StringConstructor;
    iconPosition: StringConstructor;
    size: {
        type: StringConstructor;
        validator(value: string): boolean;
    };
}>>, {
    plain: boolean;
    round: boolean;
    disabled: boolean;
}>>;
export default Button;
